@model LandRegistrationUI.Models.UsersData
@{
    ViewBag.Title = "UserDetails";
}

<style>
    .label_text {
        font-size: 16px;
        padding-top: 5px;
        font-weight: 500;
    }

    .custom_checkbox {
        display: inline-block;
        margin: 5px 15px;
    }

    .image_row {
        display: flex;
        flex-wrap: wrap;
        padding: 0 4px;
    }

    /* Create four equal columns that sits next to each other */
    .image_column {
        flex: 25%;
        max-width: 25%;
        padding: 0 4px;
    }

        .image_column img {
            margin-top: 8px;
            vertical-align: middle;
            width: 100%;
        }
</style>

<div class="row mt-3">
    <div class="col-12 text-right">
        <a href="javascript:demoFromHTML()" class="btn btn-outline-primary">Download as PDF</a>
    </div>
</div>
<div class="container mt-3" id="content">
    <div class="row">
        <div class="col-12">
            <h4 class="text-center">Land Details</h4>
        </div>
    </div>
    <hr />

    @using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">Region</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.RegionMaster.Region, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">Taluk</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.TalukMaster.TalukName, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>

            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">Revenue/Village</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.RevenueVillageMaster.RevenueVillageName, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">LGR</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.PattaNo, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">T.S.No</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.TSNo, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">R.S.No</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.RSNo, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>

            </div>
        </div>
        <br />
        <div class="row">
            @if (Model.RevenueVillageMaster.IsWard == true)
            {
                <div class="col-12 col-sm-6">
                    <div class="row">
                        <div class="col-3 label_text">Ward</div>
                        <div class="col-9">
                            @Html.TextBoxFor(Model => Model.WardID, new { @readonly = "readonly", @class = "form-control" })
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="col-12 col-sm-6">
                    <div class="row">
                        <div class="col-3 label_text">Block</div>
                        <div class="col-9">
                            @Html.TextBoxFor(Model => Model.BlockMaster.BlockName, new { @readonly = "readonly", @class = "form-control" })
                        </div>
                    </div>
                </div>
            }


        </div>
        @*<br />
            <div class="row">
                <div class="col-12">
                    <div class="row">
                        <div class="col-3 col-md-2 label_text">Sub-division</div>
                        <div class="col-9">
                            <div class="form-group">
                                <div class="custom-control custom-checkbox custom_checkbox">
                                    <input type="checkbox" class="custom-control-input" id="customCheck1" checked="">
                                    <label class="custom-control-label" for="customCheck1">Sub-division 1</label>
                                </div>
                                <div class="custom-control custom-checkbox custom_checkbox">
                                    <input type="checkbox" class="custom-control-input" id="customCheck2" checked="">
                                    <label class="custom-control-label" for="customCheck2">Sub-division 2</label>
                                </div>
                                <div class="custom-control custom-checkbox custom_checkbox">
                                    <input type="checkbox" class="custom-control-input" id="customCheck3" checked="">
                                    <label class="custom-control-label" for="customCheck3">Sub-division 3</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>*@
        <br />
        <div class="row">
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">Owner Name</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.OwnerName, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">Tenant Name</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.TenantName, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">Address</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.AddressLine1, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">Previous Owner Address</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.PreviousOwnerAddLine1, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text"></div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.AddressLine2, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text"></div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.PreviousOwnerAddLine2, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">Address</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.AddressLine3, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-12 col-sm-6">
                <div class="row">
                    <div class="col-3 label_text">Address</div>
                    <div class="col-9">
                        @Html.TextBoxFor(Model => Model.PreviousOwnerAddLine3, new { @readonly = "readonly", @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-1 label_text">Remarks</div>
            <div class="col-9" style="padding-left: 60px;">
                @Html.TextAreaFor(Model => Model.Remarks, new { @readonly = "readonly", @class = "form-control" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-12">
                <h4 class="text-center">User Images</h4>
            </div>
        </div>
        <hr />
        @*<div class="row">
                <div class="col-md-12">
                    <div class="row image_row">
                        <div class="column image_column">
                            <img src="~/Images/download.jpg" />
                            <img src="~/Images/nda-image.jpg" />
                            <img src="~/Images/image.jpg" />
                        </div>
                    </div>
                </div>
            </div>*@
        <div class="row mb-5">
            <div class="col-md-12">
                <div class="row image_row">
                    @foreach (var item in Model.UserImages)
                    {
                        <div class="col-3 image_column">
                            <img src="@item.ImagePath" width="260" height="150" />
                        </div>
                    }
                </div>
            </div>
        </div>

    }
</div>




@section scripts{
    <script src="https://html2canvas.hertzen.com/dist/html2canvas.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.min.js"></script>
    <script>
        function demoFromHTML() {
            html2canvas(document.getElementById("content")).then(function (canvas) {
                var margin = 5;
                var imgData = canvas.toDataURL('image/png');
                var imgWidth = 210 - 2*margin;
                var pageHeight = 295;
                var imgHeight = canvas.height * imgWidth / canvas.width;
                var heightLeft = imgHeight;
                var doc =  new jsPDF('p', 'mm');
                var position = 10;

                doc.addImage(imgData, 'PNG', margin, position, imgWidth, imgHeight);
                heightLeft -= pageHeight;

                while (heightLeft >= 0) {
                    position = heightLeft - imgHeight;
                    doc.addPage();
                    doc.addImage(imgData, 'PNG', margin, position, imgWidth, imgHeight);
                    heightLeft -= pageHeight;
                }

                doc.save('file.pdf');
            });
            //var pdf = new jsPDF('p', 'pt', 'letter');
            //// source can be HTML-formatted string, or a reference
            //// to an actual DOM element from which the text will be scraped.
            //source = $('#content')[0];

            //// we support special element handlers. Register them with jQuery-style
            //// ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
            //// There is no support for any other type of selectors
            //// (class, of compound) at this time.
            //specialElementHandlers = {
            //    // element with id of "bypass" - jQuery style selector
            //    '#bypassme': function (element, renderer) {
            //        // true = "handled elsewhere, bypass text extraction"
            //        return true
            //    }
            //};
            //margins = {
            //    top: 80,
            //    bottom: 60,
            //    left: 40,
            //    width: 522
            //};
            //// all coords and widths are in jsPDF instance's declared units
            //// 'inches' in this case
            //pdf.fromHTML(
            //    source, // HTML string or DOM elem ref.
            //    margins.left, // x coord
            //    margins.top, { // y coord
            //    'width': margins.width, // max width of content on PDF
            //    'elementHandlers': specialElementHandlers
            //},

            //    function (dispose) {
            //        // dispose: object with X, Y of the last line add to the PDF
            //        //          this allow the insertion of new lines after html
            //        pdf.save('LandDetails.pdf');
            //    }, margins
            //);
        }
    </script>

}

